<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_dehp_time_track.DayCard</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>DayCard</name>
        <script><![CDATA[var DayCard = Class.create();
DayCard.getTaskCosts = function(cardCategories) {
	var dayCardsAgg = new GlideAggregate('x_dehp_time_track_time_card_day');
	dayCardsAgg.groupBy('time_card.category.code');
	dayCardsAgg.addAggregate('SUM', 'cost');
	if(typeof cardCategories != 'undefined')
		dayCardsAgg.addQuery('time_card.category', 'IN', cardCategories);
	dayCardsAgg.addQuery('time_card.time_sheet.state', 'Processed');
	dayCardsAgg.query();
	returnVal = {'Capital': 0, 'Expense': 0, 'Undetermined' : 0};	
	while(dayCardsAgg.next()) {
		var cost = dayCardsAgg.getAggregate('SUM', 'cost');
		returnVal[dayCardsAgg.getValue('time_card.category.code')] = cost;
	}
	return returnVal;
};

DayCard.prototype = {
	initialize: function (dayCard) {
		// handle if GlideRecord was passed.
		this.gr = TimeUtils.verifyIsGlideRecord(dayCard, 'x_dehp_time_track_time_card_day');
		this.sysId = this.gr.sys_id;
	},
	getDefaultRateCard: function () {
		var rateCard = new GlideRecord('x_dehp_time_track_rate_cards');
		rateCard.addQuery('default_rate', true);
		rateCard.query();
		if (rateCard.next()) {
			return rateCard.sys_id;
		}
		return '';
	},
	findRateCard: function () {
		var timeCard = new TimeCard(this.gr.time_card);
		var userRates = new GlideRecord('x_dehp_time_track_m2m_users_rate_cards');
		var query = 'user=' + timeCard.gr.time_sheet.user.sys_id;
		query += '^rate_cards.start_date<=' + this.gr.day;
		query += '^rate_cards.end_date>=' + this.gr.day;
		query += '^ORrate_cards.end_dateISEMPTY';
		userRates.addEncodedQuery(query);
		userRates.query();
		if (userRates.next()) {
			return userRates.rate_cards;
		}
		return this.getDefaultRateCard();
		
	},
	type: 'DayCard'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>_ejense</sys_created_by>
        <sys_created_on>2018-11-26 20:48:00</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>00e9ba81db462f00482906e2ca961974</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>DayCard</sys_name>
        <sys_package display_value="Time Tracking" source="x_dehp_time_track">fd7546c9db82eb00aa0f71043996190b</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Time Tracking">fd7546c9db82eb00aa0f71043996190b</sys_scope>
        <sys_update_name>sys_script_include_00e9ba81db462f00482906e2ca961974</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-02-04 22:15:37</sys_updated_on>
    </sys_script_include>
</record_update>
