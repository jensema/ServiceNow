<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_dehp_time_track.TimeUtils</api_name>
        <client_callable>false</client_callable>
        <description>Various utilities&#13;
dayNames: Array of the names of the day of the week. Lines up with Monday: 1 to Sunday: 7&#13;
TimeUtils.nil: Check if valid item. Returns true or false.&#13;
addUniqueValueToArray: Adds a string value to an existing array if the array doesn't contain the existing value. Returns the array.&#13;
getRecordCount: get a record count based on a table and encoded query string;</description>
        <name>TimeUtils</name>
        <script><![CDATA[var TimeUtils = Class.create();

TimeUtils.dayNames = ["", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"];

TimeUtils.verifyIsGlideRecord = function (obj, table) {
	if (obj instanceof GlideRecord)
		return obj;
	else {
		var gr = new GlideRecord(table);
		gr.get(obj);
		return gr;
	}
};

TimeUtils.nil = function(item) {
    return (item == null) || (typeof item == 'undefined') || ('' == '' + item);
};

TimeUtils.addUniqueValueToArray= function(array, value){
	if(array.join(',').indexOf(value) == -1)
		array.push(value);
	return array;
};

TimeUtils.getArrayWithUniqueVals = function(a1){
	var seen = {};
	var out = [];
	var len = a1.length;
	var j = 0;
	for(var i = 0; i < len; i++) {
		var item = a1[i];
		if(seen[item] !== 1) {
			seen[item] = 1;
			out[j++] = item;
		}
	}
	return out;
};

TimeUtils.getRecordCount = function(table, query) {
	query = TimeUtils.nil(query) ? '' : query;
	var count = new GlideAggregate(table);
	count.addEncodedQuery(query);
	count.addAggregate('COUNT');
	count.query();
	var recordCount = 0;
	if (count.next()) {
	   recordCount = count.getAggregate('COUNT');
	}
	return recordCount;
};

// Get approvals for URL in list_my_approvals UI Page
TimeUtils.getMyApprovalSheets = function(state) {
	var sheetIDs = [];
	var currentSheet;
	var approvers;
	var currentUser = gs.getUserID();
	var timeSheets = new GlideRecord('x_dehp_time_track_time_sheet');
	if(typeof state != 'undefined')
		timeSheets.addQuery('state', state);
	timeSheets.addQuery('user', '!=', '');
	timeSheets.orderBy('user');
	timeSheets.query();
	while (timeSheets.next()) {
		currentSheet = new TimeSheet(timeSheets);
		approvers = currentSheet.getApprovers();
		if(approvers.indexOf(currentUser) != -1) {
			sheetIDs.push(currentSheet.sysId + '');
		}
	}
	var arrayUtil = new global.ArrayUtil();
	sheetIDs = arrayUtil.union(sheetIDs); // remove duplicates
	return sheetIDs;
};

// get a list of users that the approver has delegated to (top down)
TimeUtils.getDelegatedTo = function (approver) {
	approver = TimeUtils.verifyIsGlideRecord(approver, 'sys_user');
	var now = new GlideDateTime().getValue();
	var delegatedToUsers = [];
	var delegates = new GlideRecord('sys_user_delegate');
	delegates.addQuery('user', approver.sys_id);
	delegates.addQuery('approvals', true);
	delegates.addEncodedQuery('starts<' + now + '^ends>' + now);
	delegates.addEncodedQuery('delegate.roles=x_dehp_time_track.approver');
	delegates.query();
	while(delegates.next()) {
		delegatedToUsers.push(delegates.getValue('delegate'));
	}
	return delegatedToUsers;
};
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>_ejense</sys_created_by>
        <sys_created_on>2018-11-26 20:53:07</sys_created_on>
        <sys_id>830bfac1db462f00482906e2ca961914</sys_id>
        <sys_mod_count>34</sys_mod_count>
        <sys_name>TimeUtils</sys_name>
        <sys_package display_value="Time Tracking" source="x_dehp_time_track">fd7546c9db82eb00aa0f71043996190b</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Time Tracking">fd7546c9db82eb00aa0f71043996190b</sys_scope>
        <sys_update_name>sys_script_include_830bfac1db462f00482906e2ca961914</sys_update_name>
        <sys_updated_by>_ejense</sys_updated_by>
        <sys_updated_on>2019-01-31 17:33:45</sys_updated_on>
    </sys_script_include>
</record_update>
